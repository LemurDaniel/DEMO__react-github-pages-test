{"version":3,"sources":["components/Footer.js","modulesJs/Vector.js","modulesJs/Particle.js","modulesJs/Spaceship.js","modulesJs/Asteroids.js","components/Spacegame.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Vector","x","y","this","Math","abs","sqrt","vec","sub","mag","limit","setMag","angle","heading","cos","sin","_round","TAU","PI","atan","m","vec2","copy","add","vecOrMul","mul2","mul","ParticleManager","limbo","particles","includeLimbo","length","prt","push","end","i","onActive","canvas","_checkLimbo","collisions","alive","render","collider","afterCollision","id","dist","radius","result","onCollision","Particle","pos","velocity","lives","time","round","width","height","move","draw","getContext","wrapBounds","ctx","setTransform","rotate","Bullet","isOOB","fillRect","ast","floor","mass","random","Ship","cursor","friction","maxV","cannon","document","addEventListener","e","code","shoot","thrust","fromAngle","gradual","drawLives","drawShip","size","scale","console","log","translate","beginPath","moveTo","lineTo","closePath","stroke","strokeRect","sign","Asteroid","verts","setRotation","rotation","vel","vel2","applyForce","maximum","temp","temp2","ship","obfuscateAngle","min","range","rand","targetAmount","asteroids","mousePos","Spacegame","canvasRef","useRef","useEffect","current","style","useState","gameRunning","setCursor","onMouseMove","type","touch","nativeEvent","touches","clientX","offsetLeft","clientY","offsetTop","astAmount","setAstAmount","astTarget","setAstTarget","score","setScore","amount","max","ceil","count","getRandom","setLimbo","localScore","loop","clearRect","strokeStyle","fillStyle","lineCap","lineWidth","arc","fill","forEach","calculateCollsision","bullet","ticker","setInterval","clearInterval","onTouchMove","onClick","onMouseLeave","onMouseEnter","ref","defaultProps","window","innerWidth","innerHeight","App","setWidth","setHeight","h","screen","w","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34de70cc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { BiCopyright } from 'react-icons/bi';\r\nimport { SiTailwindcss, SiMysql, SiLetsencrypt } from 'react-icons/si';\r\nimport { IoLogoNodejs, IoLogoReact, IoLogoGithub } from 'react-icons/io5';\r\nimport { IoLogoJavascript, IoLogoLinkedin, IoLogoXing } from 'react-icons/io';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n\r\n        <footer className=\"pt-1 w-full   fixed bottom-0   flex flex-col md:flex-row justify-evenly   bg-dark-100 text-white text-xs font-bold\">\r\n\r\n            <div className=\"mx-auto mx:mx-0  pb-1\">\r\n                <p className=\"px-2 inline \"> <BiCopyright className=\"inline\" /> <span className=\"font-extralight\">copyright 2021 - </span> LemurDaniel</p>\r\n                <a href=\"https://github.com/LemurDaniel/PROJECT__React-app-1\">  <IoLogoGithub   className=\"footer-icon\" /> </a>\r\n                <a href=\"https://www.xing.com/profile/Daniel_Landau8/\">         <IoLogoXing     className=\"footer-icon\" /> </a>\r\n                <a href=\"https://www.linkedin.com/in/daniel-landau-ab2417188/\"> <IoLogoLinkedin className=\"footer-icon\" /> </a>\r\n            </div>\r\n\r\n            <div className=\"mx-auto mx:mx-0   py-1 md:py-0  border-gray-700 border-t md:border-t-0\">\r\n                <p className=\"px-2 inline\">Technologies </p>\r\n                <a href=\"https://www.javascript.com/\">  <IoLogoJavascript   className=\"footer-icon\" /> </a>\r\n                <a href=\"https://reactjs.org/\">         <IoLogoReact        className=\"footer-icon\" /> </a>\r\n                <a href=\"https://tailwindcss.com/\">     <SiTailwindcss      className=\"footer-icon\" /> </a>\r\n            </div>\r\n\r\n        </footer>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Footer;","class Vector {\r\n\r\n    constructor(x, y) {\r\n        this.x = x ?? 0;\r\n        this.y = y ?? 0;\r\n    }\r\n\r\n\r\n    static fromAngle(angle, mag) {\r\n        const y = Math.sin(angle) * mag;\r\n        const x = Math.cos(angle) * mag;\r\n        return new Vector(x, y);\r\n    }\r\n\r\n    static sub(vec, vec2) {\r\n        return vec.copy().sub(vec2);\r\n    }\r\n\r\n    static add(vec, vec2) {\r\n        return vec.copy().add(vec2);\r\n    }\r\n\r\n    static mul(vec, vecOrMul, mul2) {\r\n        return vec.copy().mul(vecOrMul, mul2);\r\n    }\r\n\r\n\r\n    _round() {\r\n        if (Math.abs(this.x) < 10e-10) this.x = 0;\r\n        if (Math.abs(this.y) < 10e-10) this.y = 0;\r\n    }\r\n\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    mag() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    dist(vec) {\r\n        return Vector.sub(this, vec).mag();\r\n    }\r\n\r\n    limit(limit) {\r\n        if (this.mag() > limit) return this.setMag(limit);\r\n    }\r\n\r\n    setMag(mag) {\r\n        const angle = this.heading();\r\n        this.x = Math.cos(angle) * mag;\r\n        this.y = Math.sin(angle) * mag;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    heading() {\r\n        const TAU = Math.PI * 2;\r\n\r\n        if (this.x === 0)\r\n            return this.y > 0 ? (Math.PI / 2) : (Math.PI * 3 / 2);\r\n\r\n        if (this.x > 0)\r\n            return (TAU + Math.atan(this.y / this.x)) % TAU;\r\n\r\n        if (this.x < 0)\r\n            return Math.PI + Math.atan(this.y / this.x);\r\n\r\n    }\r\n\r\n    add(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    sub(vec) {\r\n        this.x -= vec.x;\r\n        this.y -= vec.y;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    mul(vec, m) {\r\n        if (typeof vec === 'number') {\r\n            this.x *= vec;\r\n            this.y *= m ?? vec;\r\n        } else {\r\n            this.x *= vec.x;\r\n            this.y *= vec.y;\r\n        }\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Vector;","import Vector from './Vector';\r\n\r\n\r\nclass ParticleManager {\r\n\r\n    constructor() {\r\n        this.limbo = [];\r\n        this.particles = [];\r\n    }\r\n\r\n\r\n    count(includeLimbo) {\r\n        return this.particles.length + (includeLimbo ? this.limbo.length : 0);\r\n    }\r\n\r\n    push(prt) {\r\n        if(prt.limbo > 0) this.limbo.push(prt)\r\n        else this.particles.push(prt)\r\n    }\r\n\r\n\r\n    _checkLimbo() {\r\n\r\n        let end = this.limbo.length - 1;\r\n        for (let i = 0; i <= end; i++) {\r\n\r\n            const prt = this.limbo[i];\r\n\r\n            if(--prt.limbo <= 0) {\r\n                this.limbo[i--] = this.limbo[end--];\r\n                this.particles.push(prt);\r\n                prt.onActive();\r\n            }\r\n        }\r\n\r\n        this.limbo.length = end+1;\r\n    }\r\n\r\n    render(canvas) {\r\n\r\n        this._checkLimbo();\r\n\r\n        let end = this.particles.length - 1;\r\n        for (let i = 0; i <= end; i++) {\r\n\r\n            const prt = this.particles[i];\r\n\r\n            prt.collisions = {}; // reset collisions for this frame.\r\n\r\n            if(prt.alive) prt.render(canvas);\r\n            else this.particles[i--] = this.particles[end--];\r\n\r\n        }\r\n\r\n        this.particles.length = end+1;\r\n    }\r\n\r\n    calculateCollsision(collider, afterCollision) {\r\n\r\n        const particles = this.particles;\r\n\r\n        let end = particles.length-1;\r\n        for (let i = 0; i <= end; i++) {\r\n\r\n            const prt = particles[i];\r\n\r\n            if (!prt.alive) continue;\r\n            if (prt === collider) continue;\r\n            \r\n            // Prevent double calculating and handling of collisions.\r\n            if(collider.id in prt.collisions) continue;\r\n            \r\n            // Calculate distance.\r\n            const dist = prt.dist(collider);\r\n            if (dist >= prt.radius + collider.radius) {\r\n                prt.collisions[collider.id] = false;\r\n                collider.collisions[prt.id] = false;\r\n                continue;\r\n            }\r\n            prt.collisions[collider.id] = true;\r\n            collider.collisions[prt.id] = true;\r\n\r\n\r\n            // On Collision.\r\n            const result = collider.onCollision(prt);\r\n\r\n            // Remove dead particles.\r\n            if(!prt.alive) {\r\n                particles[i--] = particles[end--];\r\n                particles.length = end+1;\r\n            }\r\n\r\n            if(afterCollision) afterCollision(result, collider, prt);\r\n            if(!collider.alive) break;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class Particle extends Vector {\r\n\r\n    static id = 0;\r\n\r\n    constructor(pos, velocity, radius, lives = 1) {\r\n        super(pos.x, pos.y);\r\n        this.id = Particle.id++;\r\n\r\n        this.limbo = 0; // Time before Particle is active.\r\n        this.alive = lives;\r\n        this.angle = 0;\r\n        this.radius = radius;\r\n        this.velocity = velocity;\r\n        this.collisions = {};\r\n    }\r\n\r\n    setLimbo(time, onActive) {\r\n        this.limbo = Math.round(time);\r\n        this.onActive = onActive ?? (() => null);\r\n    }\r\n\r\n    isOOB(canvas) {\r\n        if (this.x > canvas.width + this.radius * 2) return true;\r\n        if (this.y > canvas.height + this.radius * 2) return true;\r\n        if (this.x < 0 - this.radius * 2) return true;\r\n        if (this.y < 0 - this.radius * 2) return true;\r\n        return false;\r\n    }\r\n\r\n    wrapBounds(canvas) {\r\n        if (this.x > canvas.width + this.radius * 2 + 5)\r\n            this.x = -this.radius * 2;\r\n        else if (this.x < -this.radius * 2 - 5)\r\n            this.x = canvas.width + this.radius * 2;\r\n\r\n        if (this.y > canvas.height + this.radius * 2 + 5)\r\n            this.y = -this.radius * 2;\r\n        else if (this.y < -this.radius * 2 - 5)\r\n            this.y = canvas.height + this.radius * 2;\r\n    }\r\n\r\n    render(canvas) {\r\n        this.move(canvas);\r\n        this.draw(canvas.getContext('2d'));\r\n    }\r\n\r\n    move(canvas) {\r\n        this.add(this.velocity);\r\n        this.wrapBounds(canvas);\r\n    }\r\n\r\n    draw(ctx) { \r\n        ctx.setTransform(1, 0, 0, 1, this.x, this.y);\r\n        ctx.rotate(this.angle);\r\n    }\r\n\r\n    onCollision(prt) {\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\nexport default ParticleManager;\r\n","\r\nimport ParticleManager, { Particle } from './Particle';\r\nimport Vector from './Vector'\r\n\r\n\r\n\r\n\r\nclass Bullet extends Particle {\r\n\r\n  constructor(pos, velocity) {\r\n    super(pos, velocity, 10);\r\n    this.add(Vector.mul(velocity, 1))\r\n    this.angle = this.velocity.heading();\r\n  }\r\n\r\n  move(canvas) {\r\n    // super.move(canvas);\r\n    this.add(this.velocity)\r\n    this.alive = !this.isOOB(canvas);\r\n  }\r\n\r\n  draw(ctx) {\r\n    super.draw(ctx);\r\n    ctx.fillRect(10, -2.5, 20, 5);\r\n  }\r\n\r\n  onCollision(ast) {\r\n\r\n    ast.alive = false\r\n    this.alive = false;\r\n\r\n    return Math.floor(ast.mass / (Math.random() * 10 + 100));\r\n  }\r\n\r\n}\r\n\r\n\r\nclass Ship extends Particle {\r\n\r\n  constructor(x, y, angle) {\r\n    super(\r\n      new Vector(x, y),\r\n      new Vector(0, 0), 5, 3\r\n    )\r\n\r\n    this.cursor = new Vector(1, 1);\r\n    this.friction = 0.05;\r\n    this.maxV = 14;\r\n\r\n    this.cannon = new ParticleManager();\r\n\r\n    document.addEventListener('keyup', e => {\r\n      if (e.code === 'Space') {\r\n        this.shoot();\r\n      }\r\n      if (e.code === 'KeyW') {\r\n        this.thrust();\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  shoot() {\r\n    this.cannon.push(new Bullet(\r\n      this.copy(), Vector.fromAngle(this.angle, 20)\r\n    ))\r\n  }\r\n\r\n  setCursor(pos) {\r\n    this.cursor = Vector.sub(pos, this);\r\n  }\r\n\r\n\r\n  thrust(gradual) {\r\n    if (gradual) {\r\n      this.velocity.add(Vector.fromAngle(\r\n        this.angle, this.cursor.mag() * 0.00105))\r\n    } else {\r\n      this.velocity = Vector.fromAngle(\r\n        this.angle, this.cursor.mag() * 0.035)\r\n    }\r\n  }\r\n\r\n  // draw spaceship\r\n  draw(ctx) {\r\n    this.drawLives(ctx)\r\n    super.draw(ctx);\r\n    this.drawShip(ctx);\r\n  }\r\n\r\n  drawLives(ctx) {\r\n    \r\n    const canvas = ctx.canvas;\r\n    ctx.setTransform(1,0,0,1, canvas.width*0.05, canvas.height*0.035)\r\n\r\n    //ctx.font = 'bold 44px arial';\r\n    //ctx.fillText('Lives: ', x, 20);\r\n\r\n    const size = 0.8;\r\n    ctx.scale(size,size)\r\n    ctx.rotate(-Math.PI/4)\r\n\r\n    for(let i=0; i<this.alive; i++) {\r\n      this.drawShip(ctx);\r\n      console.log('s')\r\n      ctx.translate(60*size, 60*size);\r\n    }\r\n  }\r\n\r\n  drawShip(ctx) {\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(20, 0);\r\n    ctx.lineTo(-20, 20)\r\n    ctx.lineTo(-20, -20)\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n    ctx.strokeRect(-28, -5 - 10, 8, 10);\r\n    ctx.strokeRect(-28, 5, 8, 10);\r\n    ctx.strokeRect(16, -1, 10, 2);\r\n\r\n  }\r\n\r\n  move(canvas) {\r\n\r\n    // limit Velocity to max Velocity\r\n    this.velocity.limit(this.maxV);\r\n\r\n    // reduce velocity by friction // add/subtract for negative/positive velocity\r\n    this.velocity.x -= this.friction * Math.sign(this.velocity.x);\r\n    this.velocity.y -= this.friction * Math.sign(this.velocity.y);\r\n\r\n    if (this.velocity.mag() <= 10e-2) this.velocity.setMag(0);\r\n\r\n    this.angle = this.cursor.heading();\r\n\r\n    super.move(canvas);\r\n\r\n  }\r\n\r\n  onCollision(ast) {\r\n    console.log('ass')\r\n    ast.alive = false;\r\n    this.alive--;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Ship;","import { Particle } from './Particle'\r\nimport Vector from './Vector'\r\n\r\nclass Asteroid extends Particle {\r\n\r\n    static targetAmount = 0;\r\n\r\n    constructor(pos, velocity, radius, verts) {\r\n        super(pos, velocity, radius);\r\n        this.mass = Math.PI * radius * radius;\r\n        this.verts = verts;\r\n\r\n        this.setRotation();\r\n    }\r\n\r\n    setRotation() {\r\n        this.rotation = 1;\r\n        if(Math.round(Math.random()))   \r\n            this.rotation = -1;\r\n    }\r\n\r\n    move(canvas) {\r\n        this.velocity.limit(4);\r\n        super.move(canvas);\r\n        this.angle += this.velocity.heading() * 0.0055 * this.rotation;\r\n        if(this.velocity.mag() < 0.15) this.velocity.setMag(Math.random()*(canvas.width*0.0025))\r\n    }\r\n\r\n    static getRandom(canvas, ship) {\r\n\r\n        // The codeblock creates a position at the center of the screen\r\n        // and moves it at an random angle outside of the screen.\r\n        const pos = new Vector(canvas.width/2, canvas.height/2);\r\n        const angle = Math.random() * (Math.PI*2);\r\n        const move = Vector.fromAngle(angle, pos.mag()+10);\r\n        pos.add(move);\r\n\r\n\r\n        const direction = Vector.sub(ship, pos);\r\n        const obfuscateAngle = direction.heading() - (Math.random() * Math.PI/16  - Math.PI/32)\r\n\r\n        const velocity = Vector.fromAngle(obfuscateAngle, Math.random()*(canvas.width*0.0025) )\r\n        const radius = Math.random()* (Math.min(canvas.width*0.035, 55)) + 8;\r\n\r\n        const verts = [];\r\n        for( let i=Math.PI*2; i>=0; i -= Math.PI/8 ) {\r\n            const range = radius * 0.65;\r\n            const rand = Math.random()* range - range/2;\r\n\r\n            const x = Math.cos(i) * (radius + rand);\r\n            const y = Math.sin(i) * (radius + rand);\r\n    \r\n            verts.push(new Vector(x, y));\r\n        }\r\n\r\n        return new Asteroid(pos, velocity, radius, verts);\r\n    }\r\n\r\n\r\n    draw(ctx) {\r\n\r\n        super.draw(ctx);\r\n        const verts = this.verts;\r\n\r\n        ctx.beginPath();   \r\n        ctx.moveTo(verts[0].x, verts[0].y);    \r\n        for(let i=1; i<verts.length; i++) {\r\n            ctx.lineTo(verts[i].x, verts[i].y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n        // ctx.arc(0, 0, this.radius, 0, Math.PI*2)\r\n        // ctx.stroke();\r\n\r\n    }\r\n\r\n\r\n    applyForce(velocity, mass) {\r\n        const force = mass * velocity.mag();\r\n        const mag = force / this.mass;\r\n        const vec = Vector.fromAngle(velocity.heading(), mag);\r\n        this.velocity.add(vec);\r\n    }\r\n\r\n    onCollision(ast) {\r\n\r\n        const vel = this.velocity.copy();\r\n        const vel2 = ast.velocity.copy();\r\n\r\n        this.setRotation();\r\n        ast.setRotation();\r\n\r\n        this.velocity.setMag( this.velocity.mag() * -0.5 );\r\n        ast.velocity.setMag( ast.velocity.mag() * -0.5 );\r\n\r\n        ast.applyForce(vel, this.mass);\r\n        this.applyForce(vel2, ast.mass);\r\n\r\n\r\n        let dist;\r\n        let maximum =  75;\r\n        const temp = this.velocity.copy().setMag(0.1);\r\n        const temp2 = ast.velocity.copy().setMag(0.1);\r\n        do {\r\n            /// console.log(dist)\r\n            dist = this.dist(ast);\r\n            this.add(temp)\r\n            ast.add(temp2);\r\n        } while(--maximum && dist <= this.radius + ast.radius);\r\n        \r\n\r\n        if(this.dist(ast) <= this.radius + ast.radius) {\r\n            const temp = Vector.add(this.velocity, ast.velocity);\r\n            this.velocity = temp.copy().setMag( Math.abs(this.velocity.mag()) *1);\r\n            ast.velocity = temp.copy().setMag( Math.abs(ast.velocity.mag()) *-1)\r\n\r\n            maximum = 75;\r\n            do {\r\n                /// console.log(dist)\r\n                dist = this.dist(ast);\r\n                this.add(this.velocity)\r\n                ast.add(ast.velocity);\r\n            } while(--maximum && dist <= this.radius + ast.radius);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Asteroid;","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nimport Vector from '../modulesJs/Vector';\r\nimport Ship from '../modulesJs/Spaceship';\r\nimport Asteroid from '../modulesJs/Asteroids';\r\nimport ParticleManager from '../modulesJs/Particle';\r\n\r\n\r\n\r\nconst MAX_ASTEROIDS = 30;\r\nconst SCALE = 2;\r\nconst ship = new Ship(0, 0, 0)\r\nconst asteroids = new ParticleManager();\r\nconst mousePos = new Vector(0, 0)\r\n\r\n\r\nconst Spacegame = ({ width, height }) => {\r\n\r\n    const canvasRef = useRef(null);\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n\r\n        canvas.height = height * SCALE;\r\n        canvas.width = width * SCALE;\r\n        canvas.style.width = width + 'px'\r\n        canvas.style.height = height + 'px';\r\n\r\n        // Scale and translate origin once.\r\n        canvas.getContext('2d').scale(SCALE, SCALE);\r\n        ship.x = width * SCALE / 2\r\n        ship.y = height * SCALE / 2;\r\n\r\n        ship.x = width * SCALE / 2;\r\n        ship.y = height * SCALE / 2;\r\n\r\n        return () => canvas.getContext('2d').scale(-SCALE, -SCALE);\r\n    }, [canvasRef, width, height]);\r\n\r\n\r\n\r\n\r\n\r\n    const [gameRunning, setGameRunning] = useState(true);\r\n    const [cursor, setCursor] = useState(true);\r\n\r\n    const onMouseMove = e => {\r\n        const canvas = canvasRef.current;\r\n\r\n        if (e.type === 'touchmove') {\r\n            const touch = e.nativeEvent.touches[0]\r\n            mousePos.x = (touch.clientX - canvas.offsetLeft) * SCALE;\r\n            mousePos.y = (touch.clientY - canvas.offsetTop) * SCALE;\r\n            ship.setCursor(mousePos);\r\n            ship.thrust(true);\r\n        } else if (e.type === 'mousemove') {\r\n            mousePos.x = (e.clientX - canvas.offsetLeft) * SCALE;\r\n            mousePos.y = (e.clientY - canvas.offsetTop) * SCALE;\r\n            ship.setCursor(mousePos);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const [astAmount, setAstAmount] = useState(0);\r\n    const [astTarget, setAstTarget] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    useEffect(() => {\r\n        const amount = Math.max(4, Math.ceil(score / 75))\r\n        setAstTarget(Math.min(MAX_ASTEROIDS, amount))\r\n    }, [score])\r\n    useEffect(() => {\r\n        while (asteroids.count(true) < astTarget) {\r\n            const ast = Asteroid.getRandom(canvasRef.current, ship);\r\n            ast.setLimbo(Math.random() * 750 + 150, () => setAstAmount(asteroids.count()));\r\n            asteroids.push(ast);\r\n        }\r\n    }, [astTarget, astAmount]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!ship || !asteroids || !gameRunning) return;\r\n        let localScore = score;\r\n\r\n        const loop = () => {\r\n\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            ctx.strokeStyle = 'white';\r\n            ctx.fillStyle = 'white';\r\n            ctx.lineCap = 'round';\r\n            ctx.lineWidth = 4;\r\n\r\n            const cannon = ship.cannon;\r\n            asteroids.render(canvas);\r\n            cannon.render(canvas)\r\n            ship.render(canvas)\r\n\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n            if (cursor) {\r\n                ctx.beginPath();\r\n                ctx.arc(mousePos.x, mousePos.y, 5, 0, Math.PI * 2)\r\n                ctx.fill();\r\n            }\r\n\r\n\r\n            // Collision dedection.\r\n            asteroids.particles.forEach(prt => {\r\n                asteroids.calculateCollsision(ship, () => {\r\n                    // setGameRunning(false);\r\n                    setAstAmount(asteroids.count());\r\n                })\r\n                asteroids.calculateCollsision(prt);\r\n            });\r\n\r\n            cannon.particles.forEach(bullet => {\r\n                asteroids.calculateCollsision(bullet, result => {\r\n                    localScore += result;\r\n                    setScore(localScore);\r\n                    setAstAmount(asteroids.count());\r\n                })\r\n            })\r\n\r\n        };\r\n\r\n        // Draw on frame to make cursor dissapear.\r\n        if (!cursor) return loop();\r\n\r\n        const ticker = setInterval(() => loop(), 1000 / 60);\r\n        return () => clearInterval(ticker);\r\n    }, [cursor, gameRunning]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"overflow-hidden\" >\r\n\r\n            <div className=\"relative flex justify-evenly font-bold text-brand2-100\" >\r\n                <p className=\"absolute md:left-1/3 top-2\">Highscore: {score}</p>\r\n                <p className=\"absolute md:right-1/3 top-8 md:top-2\">Asteroids: {astAmount} / {astTarget}</p>\r\n            </div>\r\n\r\n            <div className=\"rounded-md\">\r\n                <canvas style={{ 'touch-action': 'none' }}\r\n                    height={height} width={width} onMouseMove={onMouseMove} onTouchMove={onMouseMove} onClick={e => ship.shoot()}\r\n                    onMouseLeave={e => setCursor(false)} onMouseEnter={e => setCursor(true)}\r\n                    ref={canvasRef} className=\" \" ></canvas>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nSpacegame.defaultProps = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight - 35\r\n}\r\n\r\nexport default Spacegame\r\n","import './css/Tailwind.css'\nimport './css/App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\n\nimport Spacegame from './components/Spacegame';\n\n\n\nfunction App() {\n\n  const [width, setWidth] = useState(0)\n  const [height, setHeight] = useState(0)\n  useEffect(() => {\n\n    const h = window.screen.height;\n    const w = window.screen.width;\n\n    if(w > 720) {\n      setWidth(w * 0.75)\n      setHeight(h * 0.55)\n    } else {\n      setWidth(w * 0.85)\n      setHeight(h * 0.55)\n    }\n  }, [])\n\n  return (\n\n    <>\n\n\n      <nav className=\"py-1 fixed w-full top-0 z-50      border-b border-brand2-100 bg-dark-700   flex justify-center\">\n        <button className=\"py-1 hover:underline text-brand2-100  font-bold\" > Space Game </button>\n      </nav>\n\n      <Spacegame width={window.window.innerWidth} height={window.window.innerHeight-70} />\n\n      <Footer />\n\n    </>\n\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport './css/Tailwind.css'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}