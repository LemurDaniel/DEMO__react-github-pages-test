{"version":3,"sources":["components/Footer.js","components/Timer.js","components/Modal.js","modulesJs/Vector.js","modulesJs/Particle.js","modulesJs/Spaceship.js","modulesJs/Asteroids.js","components/useAudio.js","components/Spacegame.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","className","href","Timer","ticks","setTicks","pause","useEffect","ticker","setInterval","t","clearInterval","sec","min","Math","floor","h","str","ticksToString","Modal","scores","onRestart","map","i","score","onClick","Vector","x","y","this","Matter","create","abs","sqrt","vec","sub","mag","limit","setMag","angle","heading","cos","sin","_round","TAU","PI","atan","m","vec2","copy","add","vecOrMul","mul2","mul","ParticleManager","matterWorld","lastFrame","limbo","particles","dying","push","particle","Array","prototype","call","onActive","length","newCount","oldCount","prt","forEach","onInActive","end","canvas","getContext","Window","Frames","fade","render","faded","initialLength","_checkLimbo","_checkDying","alive","_removeParticleAtIndex","onCountChanged","index","died","hidden","id","collider","afterCollision","isColliding","resultCollider","onCollision","resultCollided","_removeSelf","Particle","position","velocity","options","lives","radius","matterBody","Body","plugin","particleRef","setPosition","MatterVector","setVelocity","DrawScale","setAngle","scale","seed","random","Number","MAX_SAFE_INTEGER","vertices","collisions","fadeTime","fadeEnd","time","mass","collisionFilter","group","category","mask","collided","dist","width","height","ctx","move","wrapBounds","MatterVelocity","setTransform","rotate","draw","Composite","MatterJSWorld","remove","Bullet","pos","label","frictionAir","friction","isSensor","v","isOOB","disableCollision","DrawRoughJS","roughCan","rough","rectangle","RoughJSSetting","fillRect","ast","Bodies","Ship","density","restitution","cursor","maxV","cannon","gradual","onShoot","fromAngle","onThrust","size","translate","polygon","beginPath","moveTo","lineTo","closePath","stroke","strokeRect","someVariableWithoutADescriptiveName","Asteroid","verts","vert","angVel","log","round","setAngularVelocity","vel","ship","obfuscateAngle","anotherVariable","Scale","max","range","rand","targetAmount","useAudio","origin","window","useState","sounds","setSounds","soundRef","useRef","current","getSoundEffects","a","fetch","response","json","Object","keys","key","Audio","console","filename","volume","playSingle","audio","src","play","loop","ENGINE","Engine","gravity","SCALE","world","roughness","fill","fillWeight","strokeWidth","bowing","curveFitting","data","asteroids","mousePos","Spacegame","playSound","canvasRef","innerWidth","innerHeight","dimension","setDimension","initializeGame","reset","onkeyup","e","code","shoot","thrust","setTreshhold","setAstTarget","setAstAmount","setScore","setGameRunning","setPause","onresize","newWidth","newHeight","style","onMouseMove","gameRunning","type","touch","nativeEvent","touches","clientX","offsetLeft","clientY","offsetTop","setCursor","astAmount","astTarget","treshhold","setScores","amount","count","limboCount","getRandom","s","sort","b","delta","Events","off","on","pairs","bodyA","bodyB","sensor","asteroid","sensorPrt","asteroidPrt","result","points","sc","clearRect","strokeStyle","fillStyle","lineCap","lineWidth","update","drawLives","arc","drawType","setDrawType","onTouchMove","onTouchEnd","onTouchStart","onMouseLeave","onMouseEnter","ref","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23dc8e4b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { BiCopyright } from 'react-icons/bi';\r\nimport { SiTailwindcss, SiMysql, SiLetsencrypt } from 'react-icons/si';\r\nimport { IoLogoNodejs, IoLogoReact, IoLogoGithub } from 'react-icons/io5';\r\nimport { IoLogoJavascript, IoLogoLinkedin, IoLogoXing } from 'react-icons/io';\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n\r\n        <footer className=\"pt-1 w-full   fixed bottom-0   flex flex-col md:flex-row justify-evenly   bg-dark-100 text-white text-xs font-bold\">\r\n\r\n            <div className=\"mx-auto mx:mx-0  pb-1\">\r\n                <p className=\"px-2 inline \"> <BiCopyright className=\"inline\" /> <span className=\"font-extralight\">copyright 2021 - </span> LemurDaniel</p>\r\n                <a href=\"https://github.com/LemurDaniel/PROJECT__React-app-1\">  <IoLogoGithub   className=\"footer-icon\" /> </a>\r\n                <a href=\"https://www.xing.com/profile/Daniel_Landau8/\">         <IoLogoXing     className=\"footer-icon\" /> </a>\r\n                <a href=\"https://www.linkedin.com/in/daniel-landau-ab2417188/\"> <IoLogoLinkedin className=\"footer-icon\" /> </a>\r\n            </div>\r\n\r\n            <div className=\"mx-auto mx:mx-0   py-1 md:py-0  border-gray-700 border-t md:border-t-0\">\r\n                <p className=\"px-2 inline\">Technologies </p>\r\n                <a href=\"https://www.javascript.com/\">  <IoLogoJavascript   className=\"footer-icon\" /> </a>\r\n                <a href=\"https://reactjs.org/\">         <IoLogoReact        className=\"footer-icon\" /> </a>\r\n                <a href=\"https://tailwindcss.com/\">     <SiTailwindcss      className=\"footer-icon\" /> </a>\r\n            </div>\r\n\r\n        </footer>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Footer;","import React, { useEffect } from 'react';\r\n\r\nconst Timer = ({ticks, setTicks, pause}) => {\r\n\r\n    useEffect(() => {\r\n        if(pause) return;\r\n        const ticker = setInterval( () => setTicks(t => t+1), 1000)\r\n        return () => clearInterval(ticker);\r\n    },[ticks, pause])\r\n    \r\n    const sec = ticks % 60;\r\n    const min = Math.floor(ticks / 60) % 60;\r\n    const h   = Math.floor(ticks / 3600);\r\n\r\n    let str = h <= 0 ? '' : (h+':');\r\n    str += (min < 10 ? '0' : '') + min + ':';\r\n    str += (sec < 10 ? '0' : '') + sec;\r\n\r\n    return (\r\n        <>\r\n            <p>{str}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\n\r\n\r\nfunction ticksToString(ticks) {\r\n    const sec = ticks % 60;\r\n    const min = Math.floor(ticks / 60) % 60;\r\n    const h   = Math.floor(ticks / 3600);\r\n\r\n    let str = h <= 0 ? '' : (h+':');\r\n    str += (min < 10 ? '0' : '') + min + ':';\r\n    str += (sec < 10 ? '0' : '') + sec;\r\n\r\n    return str;\r\n}\r\n\r\nconst Modal = ({scores, onRestart}) => {\r\n    return (\r\n        <>\r\n            {/* Modal on gameover */}\r\n            < div className=\"absolute bg-white opacity-10 inset-0 \" ></div >\r\n\r\n            <div className=\"absolute inset-x-0 top-40 \">\r\n                <div className=\"w-60 mx-auto flex flex-col justify-center items-center   border border-brand2-100 rounded-sm shadow-2xl\">\r\n                    <header className=\"px-2 pb-1 rounded-t-sm  bg-dark-700 w-full text-brand2-100 font-bold text-center\">\r\n                        <p>Game Over</p>\r\n                    </header>\r\n                    <div className=\"bg-white w-full px-2 py-1 font-bold text-dark-700\">\r\n                        \r\n                        <h1 className=\"border-b-2 border-gray-200 rounded-sm\">Highscores:</h1>\r\n                        <ol className=\"list-decimal px-6\">\r\n                            {scores.map( ({score, ticks}, i) => <li key={i}>{score} Points --- {ticksToString(ticks)}</li>) }\r\n                        </ol>\r\n\r\n                    </div>\r\n                    <footer className=\"bg-dark-800 rounded-b-sm w-full flex\">\r\n                        <button className=\" mx-auto my-1 px-1 text-brand2-100 font-bold rounded-sm  border-b border-brand2-100 hover:bg-brand2-100 hover:text-dark-700 duration-300 focus:outline-none\"\r\n                            onClick={onRestart}> Restart</button>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Modal;","import Matter from \"matter-js\";\r\n\r\nclass Vector {\r\n\r\n    get MatterVector() {\r\n        return Matter.Vector.create(this.x, this.y);\r\n    }\r\n\r\n    constructor(x, y) {\r\n        this.x = x ?? 0;\r\n        this.y = y ?? 0;\r\n    }\r\n\r\n\r\n    static fromAngle(angle, mag) {\r\n        const y = Math.sin(angle) * mag;\r\n        const x = Math.cos(angle) * mag;\r\n        return new Vector(x, y);\r\n    }\r\n\r\n    static sub(vec, vec2) {\r\n        return vec.copy().sub(vec2);\r\n    }\r\n\r\n    static add(vec, vec2) {\r\n        return vec.copy().add(vec2);\r\n    }\r\n\r\n    static mul(vec, vecOrMul, mul2) {\r\n        return vec.copy().mul(vecOrMul, mul2);\r\n    }\r\n\r\n\r\n    _round() {\r\n        if (Math.abs(this.x) < 10e-10) this.x = 0;\r\n        if (Math.abs(this.y) < 10e-10) this.y = 0;\r\n    }\r\n\r\n    copy() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n\r\n    mag() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    dist(vec) {\r\n        return Vector.sub(this, vec).mag();\r\n    }\r\n\r\n    limit(limit) {\r\n        if (this.mag() > limit) return this.setMag(limit);\r\n    }\r\n\r\n    setMag(mag) {\r\n        const angle = this.heading();\r\n        this.x = Math.cos(angle) * mag;\r\n        this.y = Math.sin(angle) * mag;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    heading() {\r\n        const TAU = Math.PI * 2;\r\n\r\n        if (this.x === 0)\r\n            return this.y > 0 ? (Math.PI / 2) : (Math.PI * 3 / 2);\r\n\r\n        if (this.x > 0)\r\n            return (TAU + Math.atan(this.y / this.x)) % TAU;\r\n\r\n        if (this.x < 0)\r\n            return Math.PI + Math.atan(this.y / this.x);\r\n\r\n    }\r\n\r\n    add(vec) {\r\n        this.x += vec.x;\r\n        this.y += vec.y;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    sub(vec) {\r\n        this.x -= vec.x;\r\n        this.y -= vec.y;\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n    mul(vec, m) {\r\n        if (typeof vec === 'number') {\r\n            this.x *= vec;\r\n            this.y *= m ?? vec;\r\n        } else {\r\n            this.x *= vec.x;\r\n            this.y *= vec.y;\r\n        }\r\n        this._round();\r\n        return this;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Vector;","import Vector from './Vector';\r\nimport Matter from 'matter-js';\r\n\r\nclass ParticleManager {\r\n\r\n    constructor(matterWorld) {\r\n        this.matterWorld = matterWorld;\r\n        this.lastFrame = 0;\r\n        this.limbo = [];\r\n        this.particles = [];\r\n        this.dying = [];\r\n\r\n        // Call particle.onActive on all particles that are pushed to the particles array.\r\n        this.particles.push = function (particle) {\r\n            Array.prototype.push.call(this, particle)\r\n            particle.onActive();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    get count() {\r\n        return this.particles.length;\r\n    }\r\n\r\n    get limboCount() {\r\n        return this.limbo.length;\r\n    }\r\n\r\n    onCountChanged(newCount, oldCount) { }\r\n\r\n    push(prt) {\r\n        if (prt.limbo > 0)\r\n            this.limbo.push(prt)\r\n        else\r\n            this.particles.push(prt)\r\n    }\r\n\r\n    reset() {\r\n        this.particles.forEach(prt => prt.onInActive());\r\n        this.limbo = [];\r\n        this.particles = [];\r\n        this.dying = [];\r\n    }\r\n\r\n    _checkLimbo() {\r\n\r\n        let end = this.limbo.length - 1;\r\n        for (let i = 0; i <= end; i++) {\r\n\r\n            const prt = this.limbo[i];\r\n\r\n            if (--prt.limbo <= 0) {\r\n                this.limbo[i--] = this.limbo[end--];\r\n                this.particles.push(prt);\r\n            }\r\n        }\r\n\r\n        this.limbo.length = end + 1;\r\n    }\r\n\r\n    _checkDying(canvas) {\r\n\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        let end = this.dying.length - 1;\r\n        for (let i = 0; i <= end; i++) {\r\n\r\n            const prt = this.dying[i];\r\n\r\n            if (this.lastFrame !== Window.Frames) prt.fade();\r\n\r\n            prt.render(canvas);\r\n\r\n            if (prt.faded) {\r\n                this.dying[i--] = this.dying[end--];\r\n                prt.onInActive();\r\n            }\r\n\r\n        }\r\n\r\n        this.dying.length = end + 1;\r\n    }\r\n\r\n\r\n    render(canvas) {\r\n\r\n        const initialLength = this.particles.length;\r\n\r\n        this._checkLimbo();\r\n        this._checkDying(canvas);\r\n\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n\r\n            const prt = this.particles[i];\r\n\r\n            if (prt.alive)\r\n                prt.render(canvas);\r\n            else\r\n                this._removeParticleAtIndex(i--);\r\n        }\r\n\r\n        if (initialLength !== this.particles.length)\r\n            this.onCountChanged(this.particles.length, initialLength);\r\n\r\n        this.lastFrame = Window.Frames;\r\n    }\r\n\r\n    _removeParticleAtIndex(index) {\r\n        const prt = this.particles[index];\r\n        const end = this.particles.length - 1;\r\n        this.particles[index] = this.particles[end];\r\n        this.particles.length = end;\r\n        if (!prt.died) {\r\n            this.dying.push(prt);\r\n            prt.hidden = true;\r\n        } else {\r\n            prt.onInActive();\r\n        }\r\n    }\r\n\r\n    _removeParticle(prt) {\r\n        for (let i = 0; i < this.particles.length; i++) {\r\n            if (this.particles[i].id !== prt.id) continue;\r\n            return this._removeParticleAtIndex(i);\r\n        }\r\n    }\r\n\r\n    // obsolete.\r\n    calculateCollsisions(collider, afterCollision) {\r\n\r\n        const particles = this.particles;\r\n\r\n        for (let i = 0; i < particles.length; i++) {\r\n\r\n            const prt = particles[i];\r\n\r\n            if (!prt.isColliding(collider)) continue;\r\n\r\n            // On Collision.\r\n            const resultCollider = collider.onCollision(prt);\r\n            const resultCollided = prt.onCollision(collider);\r\n\r\n            // Remove dead particles.\r\n            if (!prt.alive) this._removeParticleAtIndex(i--);\r\n            if (!collider.alive) collider._removeSelf();\r\n\r\n            if (afterCollision)\r\n                afterCollision(resultCollider, resultCollided, collider, prt);\r\n\r\n            if (!collider.alive) break;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class Particle extends Vector {\r\n\r\n    static id = 0;\r\n\r\n    get MatterVelocity() {\r\n        return this.velocity.MatterVector;\r\n    }\r\n\r\n    get angle() {\r\n        return this.matterBody.angle;\r\n    }\r\n\r\n    get mass() {\r\n        return this.matterBody.mass;\r\n    }\r\n\r\n    set angle(angle) {\r\n        Matter.Body.setAngle(this.matterBody, angle);\r\n    }\r\n\r\n    constructor(position, velocity, options) {\r\n        super(position.x, position.y);\r\n\r\n        const {\r\n            lives = 1,\r\n            radius = 0,\r\n        } = options;\r\n\r\n        delete options.lives;\r\n        delete options.radius;\r\n\r\n        this.matterBody = Matter.Body.create({\r\n            ...options,\r\n            plugin: {\r\n                particleRef: this,\r\n            }\r\n        })\r\n\r\n        Matter.Body.setPosition(this.matterBody, position.MatterVector);\r\n        Matter.Body.setVelocity(this.matterBody, velocity.mul(Window.DrawScale).MatterVector);\r\n        Matter.Body.setAngle(this.matterBody, velocity.heading());\r\n        Matter.Body.scale(this.matterBody, Window.DrawScale, Window.DrawScale);\r\n\r\n        this.seed = Math.random() * Number.MAX_SAFE_INTEGER;\r\n\r\n        this.limbo = 0; // Time before Particle is active.\r\n        this.lives = lives;\r\n        this.alive = true;\r\n        this.died = false;\r\n        this.radius = radius * Window.DrawScale;\r\n        this.velocity = velocity;\r\n        this.vertices = options.vertices; \r\n\r\n        // obsolete\r\n        this.collisions = {};\r\n        this.id = Particle.id++;\r\n\r\n\r\n        this.fadeTime = 8;\r\n        this.fadeEnd = 5;\r\n        this.hidden = false;\r\n        this.faded = false;\r\n        this.time = 0;\r\n    }\r\n\r\n    disableCollision() {\r\n        this.matterBody.collisionFilter = {\r\n            group: -1,\r\n            category: 2,\r\n            mask: 0,\r\n        };\r\n    }\r\n\r\n    // obsolete.\r\n    isColliding(collider) {\r\n\r\n        if (!this.alive || !collider.alive) return false;\r\n        if (this === collider) return false;\r\n\r\n        // Prevent double calculating and handling of collisions.\r\n        if (collider.id in this.collisions) return false;\r\n\r\n        // Calculate distance.\r\n        const dist = this.dist(collider);\r\n        const collided = dist <= this.radius + collider.radius\r\n\r\n        this.collisions[collider.id] = collided;\r\n        collider.collisions[this.id] = collided;\r\n        return collided;\r\n    }\r\n\r\n    isOOB(canvas) {\r\n        if (this.x > canvas.width + this.radius * 2) return true;\r\n        if (this.y > canvas.height + this.radius * 2) return true;\r\n        if (this.x < 0 - this.radius * 2) return true;\r\n        if (this.y < 0 - this.radius * 2) return true;\r\n        return false;\r\n    }\r\n\r\n    wrapBounds(canvas) {\r\n        if (this.x > canvas.width + this.radius * 2 + 5)\r\n            this.x = -this.radius * 2;\r\n        else if (this.x < -this.radius * 2 - 5)\r\n            this.x = canvas.width + this.radius * 2;\r\n\r\n        if (this.y > canvas.height + this.radius * 2 + 5)\r\n            this.y = -this.radius * 2;\r\n        else if (this.y < -this.radius * 2 - 5)\r\n            this.y = canvas.height + this.radius * 2;\r\n    }\r\n\r\n    fade() {\r\n        if (this.time++ >= this.fadeTime) {\r\n            this.time = 0;\r\n            this.hidden = !this.hidden;\r\n            this.fadeTime = this.fadeTime * 0.95;\r\n        }\r\n\r\n        if (this.fadeTime < this.fadeEnd) this.faded = true;\r\n    }\r\n\r\n    render(canvas) {\r\n        const ctx = canvas.getContext('2d')\r\n\r\n        this.x = this.matterBody.position.x;\r\n        this.y = this.matterBody.position.y;\r\n        this.velocity.y = this.matterBody.velocity.y;\r\n        this.velocity.x = this.matterBody.velocity.x;\r\n\r\n        this.move(canvas);\r\n        this.wrapBounds(canvas);\r\n\r\n        Matter.Body.setPosition(this.matterBody, this.MatterVector);\r\n        Matter.Body.setVelocity(this.matterBody, this.MatterVelocity);\r\n\r\n        if (Window.Frames % 7 === 0)\r\n            this.seed = Math.random() * Number.MAX_SAFE_INTEGER;\r\n\r\n\r\n        if (this.hidden || this.died) return;\r\n        ctx.setTransform(Window.DrawScale, 0, 0, Window.DrawScale, this.x, this.y);\r\n        ctx.rotate(this.angle);\r\n        this.draw(ctx);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    }\r\n\r\n    draw(ctx) { }\r\n\r\n    move(canvas) { }\r\n\r\n    onCollision(prt) { };\r\n\r\n    onActive() {\r\n        Matter.Composite.add(Window.MatterJSWorld, this.matterBody);\r\n    }\r\n\r\n    onInActive() {\r\n        Matter.Composite.remove(Window.MatterJSWorld, this.matterBody);\r\n    }\r\n}\r\n\r\n\r\nexport default ParticleManager;\r\n","\r\nimport ParticleManager, { Particle } from './Particle';\r\nimport Vector from './Vector'\r\nimport Matter from 'matter-js';\r\nimport rough from 'roughjs/bundled/rough.cjs';\r\n\r\n\r\nclass Bullet extends Particle {\r\n\r\n\r\n  static rectangle = [10, -2.5, 20, 5];\r\n  static vertices = Matter.Bodies.rectangle(...Bullet.rectangle).vertices.map(v => new Vector(v.x, v.y));\r\n\r\n  constructor(pos, velocity) {\r\n    super(pos, velocity,\r\n      {\r\n\r\n        label: 'bullet',\r\n        frictionAir: 0,\r\n        friction: 0,\r\n        isSensor: true,\r\n\r\n        vertices: Bullet.vertices.map(v => v.MatterVector),\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  move(canvas) {\r\n    if (!this.isOOB(canvas)) return;\r\n\r\n    this.disableCollision();\r\n    this.alive = false;\r\n    this.died = true;\r\n  }\r\n\r\n  draw(ctx) {\r\n    super.draw(ctx);\r\n\r\n    if (Window.DrawRoughJS) {\r\n      const roughCan = rough.canvas(ctx.canvas);\r\n      roughCan.rectangle(...Bullet.rectangle, { seed: this.seed, ...Window.RoughJSSetting });\r\n    }\r\n    else\r\n      ctx.fillRect(...Bullet.rectangle);\r\n\r\n  }\r\n\r\n  onCollision(ast) {\r\n\r\n    ast.disableCollision();\r\n    ast.alive = false;\r\n\r\n    this.alive = false;\r\n    this.hidden = true;\r\n    this.fadeTime = 0;\r\n\r\n    return Math.floor(ast.mass / (Math.random() * 10 + 100));\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nclass Ship extends Particle {\r\n\r\n  constructor(x, y) {\r\n    super(\r\n      new Vector(x, y),\r\n      new Vector(0, 0),\r\n      {\r\n        radius: 5,\r\n        lives: 3,\r\n\r\n        label: 'spaceship',\r\n        frictionAir: 0.009,\r\n        friction: 0,\r\n        density: 1,\r\n\r\n        restitution: 0,\r\n        isSensor: true,\r\n      }\r\n    )\r\n\r\n    this.faded = true;\r\n    this.cursor = new Vector(1, 1);\r\n    this.maxV = 19;\r\n\r\n    this.cannon = new ParticleManager();\r\n  }\r\n\r\n  onThrust(gradual) { }\r\n  onShoot() { }\r\n\r\n  shoot() {\r\n    this.onShoot?.call()\r\n\r\n    this.cannon.push(new Bullet(\r\n      this.copy(), Vector.fromAngle(this.angle, 30)\r\n    ))\r\n  }\r\n\r\n  setCursor(pos) {\r\n    this.cursor = Vector.sub(pos, this);\r\n  }\r\n\r\n\r\n  thrust(gradual) {\r\n    this.onThrust?.call(gradual)\r\n\r\n    if (gradual) {\r\n      this.velocity.add(Vector.fromAngle(\r\n        this.angle, this.cursor.mag() * 0.00105))\r\n    } else {\r\n      this.velocity = Vector.fromAngle(\r\n        this.angle, this.cursor.mag() * 0.035)\r\n    }\r\n\r\n    Matter.Body.setVelocity(this.matterBody, this.MatterVelocity);\r\n  }\r\n\r\n  drawLives(ctx) {\r\n\r\n    const canvas = ctx.canvas;\r\n    ctx.setTransform(Window.DrawScale, 0, 0, Window.DrawScale, canvas.width * 0.05, canvas.height * 0.035)\r\n\r\n    const size = 0.8;\r\n    ctx.scale(size, size)\r\n    ctx.rotate(-Math.PI / 4)\r\n\r\n    for (let i = 0; i < this.lives; i++) {\r\n      this.draw(ctx);\r\n      ctx.translate(-10, 0);\r\n      ctx.translate(60 * size, 60 * size);\r\n    }\r\n\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n  }\r\n\r\n  draw(ctx) {\r\n\r\n    // Draw collsion body for testing. \r\n    //ctx.beginPath();\r\n    //ctx.arc(0, 0, this.radius, 0, Math.PI * 2)\r\n    //ctx.stroke();\r\n\r\n    ctx.translate(10, 0);\r\n\r\n    if (Window.DrawRoughJS) {\r\n      const roughCan = rough.canvas(ctx.canvas);\r\n\r\n      roughCan.rectangle(-28, -15, 8, 10, { seed: this.seed, ...Window.RoughJSSetting });\r\n      roughCan.rectangle(-28, 5, 8, 10, { seed: this.seed, ...Window.RoughJSSetting });\r\n      roughCan.rectangle(16, -1, 10, 2, { seed: this.seed, ...Window.RoughJSSetting });\r\n      roughCan.polygon([[20, 0], [-20, 20], [-20, -20]], { seed: this.seed, ...Window.RoughJSSetting });\r\n    }\r\n    else {\r\n      ctx.beginPath();\r\n      ctx.moveTo(20, 0);\r\n      ctx.lineTo(-20, 20)\r\n      ctx.lineTo(-20, -20)\r\n      ctx.closePath();\r\n      ctx.stroke();\r\n\r\n      ctx.strokeRect(-28, -5 - 10, 8, 10);\r\n      ctx.strokeRect(-28, 5, 8, 10);\r\n      ctx.strokeRect(16, -1, 10, 2);\r\n    }\r\n\r\n  }\r\n\r\n  move(canvas) {\r\n\r\n    this.velocity.limit(this.maxV * Window.DrawScale);\r\n\r\n    if (this.velocity.mag() <= 10e-2) this.velocity.setMag(0);\r\n\r\n    this.angle = this.cursor.heading();\r\n\r\n    if (!this.faded) this.fade();\r\n\r\n  }\r\n\r\n  onCollision(ast) {\r\n\r\n    ast.disableCollision();\r\n    ast.alive = false;\r\n\r\n    if (--this.lives <= 0)\r\n      this.alive = false;\r\n    else {\r\n      this.faded = false;\r\n      this.hidden = true;\r\n      this.fadeTime = 12;\r\n      this.fadeEnd = 12;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Ship;","import { Particle } from './Particle'\r\nimport Vector from './Vector'\r\nimport Matter from 'matter-js';\r\nimport rough from 'roughjs/bundled/rough.cjs';\r\n\r\nconst someVariableWithoutADescriptiveName = 0.0052;\r\n\r\nclass Asteroid extends Particle {\r\n\r\n    static targetAmount = 0;\r\n\r\n    constructor(pos, velocity, radius, verts) {\r\n        super(pos, velocity,\r\n            {\r\n                radius: radius,\r\n\r\n                label: 'asteroid',\r\n                frictionAir: 0,\r\n                friction: 0,\r\n                density: 1,\r\n                mass: Math.PI * radius * radius,\r\n                restitution: 0.65,\r\n\r\n                vertices: verts.map(vert => vert.MatterVector)\r\n            }\r\n        );\r\n\r\n        const angVel = Math.log(this.mass) * 0.0025 * (Math.round(Math.random()) === 0 ? 1 : -1);\r\n        Matter.Body.setAngularVelocity(this.matterBody, angVel)\r\n    }\r\n\r\n    move(canvas) {\r\n\r\n        const vel = canvas.width * someVariableWithoutADescriptiveName;\r\n\r\n        if (this.velocity.mag() < 0.55)\r\n            this.velocity.setMag(Math.random() * vel)\r\n\r\n        this.velocity.limit(Math.min(vel, Math.random() * 4 + 9));\r\n\r\n    }\r\n\r\n    static getRandom(canvas, ship) {\r\n\r\n        // The codeblock creates a position at the center of the screen\r\n        // and moves it at an random angle outside of the screen.\r\n        const pos = new Vector(canvas.width / 2, canvas.height / 2);\r\n        const angle = Math.random() * (Math.PI * 2);\r\n        pos.add(Vector.fromAngle(angle, pos.mag() + 10));\r\n\r\n\r\n        const direction = Vector.sub(ship, pos);\r\n        const obfuscateAngle = direction.heading() - (Math.random() * Math.PI / 32 - Math.PI / 64)\r\n\r\n        const anotherVariable = canvas.width * (1/Window.Scale) * 2;\r\n        const velocity = Vector.fromAngle(obfuscateAngle,\r\n            Math.random() * (anotherVariable * someVariableWithoutADescriptiveName)\r\n        )\r\n\r\n        const max = Math.min(anotherVariable * 0.075, 45);\r\n        const min = anotherVariable * 0.015;\r\n        const radius = Math.random() * max + min;\r\n\r\n        const verts = [];\r\n        for (let i = Math.PI * 2; i >= 0; i -= Math.PI / 8) {\r\n            const range = radius * 0.65;\r\n            const rand = Math.random() * range - range / 2;\r\n\r\n            const x = Math.cos(i) * (radius + rand);\r\n            const y = Math.sin(i) * (radius + rand);\r\n\r\n            verts.push(new Vector(x, y));\r\n        }\r\n\r\n        return new Asteroid(pos, velocity, radius, verts);\r\n    }\r\n\r\n\r\n    draw(ctx) {\r\n\r\n        const verts = this.vertices;\r\n\r\n        if (Window.DrawRoughJS) {\r\n            const roughCan = rough.canvas(ctx.canvas);\r\n            roughCan.polygon(verts.map(v => [v.x, v.y]), { seed: this.seed, ...Window.RoughJSSetting });\r\n        }\r\n        else {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(verts[0].x, verts[0].y);\r\n            for (let i = 1; i < verts.length; i++) {\r\n                ctx.lineTo(verts[i].x, verts[i].y);\r\n            }\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Asteroid;","import { useState, useEffect, useRef } from 'react'\r\n\r\nconst useAudio = () => {\r\n\r\n    const origin = window.origin + \"/DEMO__react-github-pages-test\"\r\n    const [sounds, setSounds] = useState({});\r\n    const soundRef = useRef(sounds);\r\n\r\n    // Using ref so that the initial return play function always has the correct reference to the new sounds-object.\r\n    soundRef.current = sounds;\r\n\r\n    const getSoundEffects = async () => {\r\n\r\n        try {\r\n            let response = await fetch(origin + \"/assets/soundeffects.json\")\r\n            response = await response.json()\r\n            Object.keys(response).forEach(key => response[key] = new Audio(origin + response[key]))\r\n            console.log(response)\r\n            setSounds(response);\r\n        } catch (exception) {\r\n            console.log(exception)\r\n        }\r\n\r\n    }\r\n    useEffect(getSoundEffects, [])\r\n\r\n    const playSound = (filename, volume = 0.15, playSingle = false) => {\r\n\r\n        if (!(filename in soundRef.current)) return;\r\n\r\n        const audio = playSingle ? soundRef.current[filename] : new Audio(soundRef.current[filename].src);\r\n        audio.volume = volume;\r\n        audio.play();\r\n\r\n    }\r\n\r\n    const toggleLoop = (filename, loop = true, volume = 0.15) => {\r\n\r\n        if (!(filename in soundRef.current)) return;\r\n\r\n        const audio = soundRef.current[filename];\r\n        audio.volume = volume;\r\n\r\n        audio.loop = loop;\r\n        if (audio.loop) audio.play();\r\n        else audio.pause()\r\n    }\r\n\r\n\r\n    return [playSound, toggleLoop]\r\n}\r\n\r\n\r\nexport default useAudio","import React, { useEffect, useRef, useState } from 'react'\r\nimport Matter from 'matter-js';\r\n\r\n\r\nimport Timer from './Timer';\r\nimport Modal from './Modal';\r\n\r\nimport Vector from '../modulesJs/Vector';\r\nimport Ship from '../modulesJs/Spaceship';\r\nimport Asteroid from '../modulesJs/Asteroids';\r\nimport ParticleManager from '../modulesJs/Particle';\r\nimport useAudio from './useAudio';\r\n\r\n\r\nconst INITIAL_AMOUNT = 4;\r\nconst INITIAL_TRESHHOLD = 800;\r\nconst TRESHHOLD_INCREASE = 1.3;\r\nconst TRESHHOLD_DAMPEN = 0.008;\r\nconst SCALE = 2; /// Higher number results in higher canvas resolution.\r\n\r\n/*\r\nfor (let i = 0, num = 800, ast = 4; i < 33; i++) {\r\n    num = num * (1.3 - ast * 0.008)\r\n    ast++\r\n    console.log(ast + ' ==> ' + Math.round(num))\r\n}\r\n*/\r\n\r\nconst ENGINE = Matter.Engine.create({\r\n    gravity: {\r\n        x: 0,\r\n        y: 0,\r\n    }\r\n});\r\n\r\nWindow.Scale = SCALE;\r\nWindow.DrawScale = SCALE / 2;\r\nWindow.MatterJSWorld = ENGINE.world;\r\nWindow.Frames = 0;\r\nWindow.DrawRoughJS = true;\r\nWindow.RoughJSSetting = {\r\n    roughness: 1.8,\r\n    fill: 'white', stroke: 'white',\r\n    fillWeight: 2, strokeWidth: 3.5,\r\n    bowing: 0.9, curveFitting: 0.2\r\n}\r\n\r\nconst data = {\r\n\r\n    ship: null,\r\n    asteroids: null,\r\n    mousePos: {\r\n        vec: new Vector(0, 0),\r\n        draw: true,\r\n    },\r\n\r\n}\r\n\r\nconst Spacegame = () => {\r\n\r\n\r\n    const [playSound] = useAudio()\r\n    const canvasRef = useRef(null);\r\n    const [dimension, setDimension] = useState([window.innerWidth, window.innerHeight - 70])\r\n\r\n    // Also called on restart game.\r\n    const initializeGame = () => {\r\n\r\n        const c = canvasRef.current;\r\n\r\n        if (data.ship !== null) data.ship.onInActive();\r\n        if (data.asteroids !== null) data.asteroids.reset();\r\n\r\n        data.ship = new Ship(dimension[0] * SCALE / 2, dimension[1] * SCALE / 2);\r\n        data.asteroids = new ParticleManager();\r\n        data.ship.onActive();\r\n\r\n        data.ship.onShoot = () => playSound(\"ship_laser\");\r\n        data.ship.onThrust = () => playSound(\"ship_thrust\", 0.15, true);\r\n\r\n        window.onkeyup = e => {\r\n            if (e.code === 'Space') data.ship.shoot();\r\n            else if (e.code === 'KeyW' || e.code === 'ArrowUp') data.ship.thrust();\r\n        }\r\n\r\n        setTreshhold(INITIAL_TRESHHOLD);\r\n        setAstTarget(INITIAL_AMOUNT);\r\n        setAstAmount(0);\r\n        setAstAmount(1);\r\n        setScore(0);\r\n        setTicks(0);\r\n        setGameRunning(true);\r\n        setPause(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.onresize = () => {\r\n            const newWidth = window.innerWidth;\r\n            const newHeight = window.innerHeight - 70;\r\n            setDimension([newWidth, newHeight])\r\n        }\r\n\r\n        initializeGame();\r\n\r\n        return () => window.onresize = null;\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const width = dimension[0]\r\n        const height = dimension[1]\r\n\r\n        canvas.height = height * SCALE;\r\n        canvas.width = width * SCALE;\r\n        canvas.style.width = width + 'px'\r\n        canvas.style.height = height + 'px';\r\n\r\n    }, [canvasRef, dimension]);\r\n\r\n\r\n\r\n\r\n\r\n    const [pause, setPause] = useState(false);\r\n\r\n    const onMouseMove = e => {\r\n        const canvas = canvasRef.current;\r\n        const { ship, mousePos } = data;\r\n\r\n        if (!ship || !gameRunning) return;\r\n\r\n        if (e.type === 'touchmove' || e.type === 'touchstart') {\r\n            const touch = e.nativeEvent.touches[0]\r\n            mousePos.vec.x = (touch.clientX - canvas.offsetLeft) * SCALE;\r\n            mousePos.vec.y = (touch.clientY - canvas.offsetTop) * SCALE;\r\n            ship.setCursor(mousePos.vec);\r\n            if (pause) setPause(false);\r\n            ship.thrust(true);\r\n        } else if (e.type === 'mousemove') {\r\n            mousePos.vec.x = (e.clientX - canvas.offsetLeft) * SCALE;\r\n            mousePos.vec.y = (e.clientY - canvas.offsetTop) * SCALE;\r\n            ship.setCursor(mousePos.vec);\r\n            if (pause) setPause(false);\r\n        }\r\n\r\n        if (e.type === 'touchstart') mousePos.draw = true;\r\n        else if (e.type === 'touchend') mousePos.draw = false;\r\n    }\r\n\r\n\r\n\r\n    const [astAmount, setAstAmount] = useState(0);\r\n    const [astTarget, setAstTarget] = useState(INITIAL_AMOUNT);\r\n    const [treshhold, setTreshhold] = useState(INITIAL_TRESHHOLD);\r\n    const [scores, setScores] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    useEffect(() => {\r\n        if (score < treshhold) return;\r\n        setTreshhold(score * Math.max(TRESHHOLD_INCREASE - TRESHHOLD_DAMPEN * astAmount, 1.01));\r\n        setAstTarget(amount => amount + 1);\r\n    }, [score])\r\n    useEffect(() => {\r\n        const { ship, asteroids } = data;\r\n        while (asteroids.count + asteroids.limboCount < astTarget) {\r\n            const ast = Asteroid.getRandom(canvasRef.current, ship);\r\n            ast.limbo = Math.random() * 550 + 95;\r\n            asteroids.push(ast);\r\n        }\r\n    }, [astTarget, astAmount]);\r\n\r\n\r\n\r\n    const [gameRunning, setGameRunning] = useState(true);\r\n    const [ticks, setTicks] = useState(0);\r\n    useEffect(() => {\r\n        if (ticks === 0) return;\r\n        else if (ticks % (60 * 5) === 0) setScore(s => s + 125);\r\n        else if (ticks % 60 === 0) setScore(s => s + 25);\r\n        else if (ticks % 30 === 0) setScore(s => s + 5);\r\n    }, [ticks]);\r\n\r\n    useEffect(() => {\r\n        if (gameRunning) return;\r\n        scores.push({ score: score, ticks: ticks });\r\n        scores.sort((a, b) => b.score - a.score)\r\n        scores.length = 10;\r\n        setScores(scores);\r\n        setTicks(0);\r\n    }, [gameRunning])\r\n\r\n\r\n    useEffect(() => {\r\n        const { ship, mousePos, asteroids, delta = 1000 / 60 } = data;\r\n\r\n        if (!ship || !asteroids || !gameRunning) return;\r\n\r\n        // Collision handeling for bullets hitting asteroids.\r\n        // Asteroids hitting asteroids is done by MatterJS internally.\r\n        Matter.Events.off(ENGINE, 'collisionStart')\r\n        Matter.Events.on(ENGINE, 'collisionStart', ({ pairs }) => {\r\n            pairs.forEach(({ bodyA, bodyB }) => {\r\n                let [sensor, asteroid] = [null, null];\r\n\r\n                if (bodyA.label === 'asteroid')\r\n                    [sensor, asteroid] = [bodyB, bodyA];\r\n                else if (bodyB.label === 'asteroid')\r\n                    [sensor, asteroid] = [bodyA, bodyB];\r\n                else return;\r\n\r\n                const [sensorPrt, asteroidPrt] = [sensor.plugin.particleRef, asteroid.plugin.particleRef]\r\n\r\n                const result = sensorPrt.onCollision(asteroidPrt);\r\n\r\n                if (sensor.label === 'bullet') {\r\n                    const points = Math.round(result * (1 / canvasRef.current.width * 1000));\r\n                    setScore(sc => sc + points);\r\n                    playSound(\"asteroid_explosion\", 0.75);\r\n                }\r\n                else if (sensor.label === 'spaceship' && sensorPrt.alive) {\r\n                    playSound(\"ship_impact\");\r\n                }\r\n                else if (sensor.label === 'spaceship' && !sensorPrt.alive) {\r\n                    playSound(\"game_over\", 1);\r\n                    setGameRunning(false);\r\n                    setPause(true);\r\n                }\r\n\r\n            })\r\n        });\r\n\r\n        // Update displayed asteroid count.\r\n        asteroids.onCountChanged = count => setAstAmount(count);\r\n\r\n        const loop = () => {\r\n\r\n            const canvas = canvasRef.current;\r\n            const ctx = canvas.getContext('2d');\r\n\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n            ctx.strokeStyle = 'white';\r\n            ctx.fillStyle = 'white';\r\n            ctx.lineCap = 'round';\r\n            ctx.lineWidth = 4;\r\n\r\n            Window.Frames++;\r\n            Matter.Engine.update(ENGINE, delta);\r\n            const cannon = ship.cannon;\r\n            asteroids.render(canvas);\r\n            cannon.render(canvas)\r\n            ship.render(canvas);\r\n\r\n            ship.drawLives(ctx);\r\n\r\n            if (mousePos.draw && !pause) {\r\n                ctx.beginPath();\r\n                ctx.arc(mousePos.vec.x, mousePos.vec.y, 5 * Window.DrawScale, 0, Math.PI * 2)\r\n                ctx.fill();\r\n            }\r\n\r\n        };\r\n\r\n        // Draw on frame to make cursor dissapear.\r\n        if (pause) return loop();\r\n\r\n        const ticker = setInterval(() => loop(), delta);\r\n        return () => clearInterval(ticker);\r\n    }, [pause, gameRunning]);\r\n\r\n\r\n    const [drawType, setDrawType] = useState('Scribbled');\r\n    const changeDrawType = e => {\r\n        Window.DrawRoughJS = !Window.DrawRoughJS;\r\n        if (!Window.DrawRoughJS)\r\n            setDrawType('Standard');\r\n        else\r\n            setDrawType('Scribbled');\r\n\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n        ctx.strokeStyle = 'white';\r\n        ctx.fillStyle = 'white';\r\n        ctx.lineCap = 'round';\r\n        ctx.lineWidth = 4;\r\n\r\n        // All the underlying movement is done by the physics engine.\r\n        // As long as Engine.update isn't call as many rerenders can be done, without any movement.\r\n        const { asteroids, ship, ship: { cannon } } = data;\r\n        asteroids.render(canvas);\r\n        cannon.render(canvas)\r\n        ship.render(canvas);\r\n\r\n        ship.drawLives(ctx);\r\n    }\r\n\r\n    return (\r\n        <div className=\"overflow-hidden select-none\" >\r\n\r\n            <div className=\"relative flex justify-evenly font-bold text-brand2-100\" >\r\n                <p className=\"absolute md:left-1/3 top-2\">Highscore: {score}</p>\r\n                <p className=\"absolute md:right-1/3 top-8 md:top-2\">Asteroids: {astAmount} / {astTarget}</p>\r\n                <div className=\"absolute right-4 md:right-12 top-8\">\r\n                    <Timer ticks={ticks} setTicks={setTicks} pause={pause || !gameRunning} />\r\n                </div>\r\n                <button type=\"button\" className=\"btn-decent text-sm  btn-light  absolute right-4 md:right-8 top-2\"\r\n                    onClick={changeDrawType}>{drawType}</button>\r\n            </div>\r\n\r\n            {gameRunning ? null : <Modal scores={scores} onRestart={initializeGame}/>}\r\n\r\n            <div className=\"rounded-md\">\r\n                <canvas style={{ 'touch-action': 'none' }}\r\n                    height={dimension[1]} width={dimension[0]} onMouseMove={onMouseMove} onClick={e => data.ship.shoot()}\r\n                    onTouchMove={onMouseMove} onTouchEnd={onMouseMove} onTouchStart={onMouseMove}\r\n                    onMouseLeave={e => setPause(true)} onMouseEnter={e => setPause(false)}\r\n                    ref={canvasRef} className=\"\" ></canvas>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nSpacegame.defaultProps = {\r\n    width: window.innerWidth,\r\n    height: window.innerHeight - 35\r\n}\r\n\r\nexport default Spacegame\r\n","import './css/Tailwind.css'\nimport './css/App.css';\n\nimport React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\n\nimport Spacegame from './components/Spacegame';\n\n\n\nfunction App() {\n\n  return (\n\n    <>\n\n\n      <nav className=\"py-1 fixed w-full top-0 z-50      border-b border-brand2-100 bg-dark-700   flex justify-center\">\n        <button className=\"py-1 hover:underline text-brand2-100  font-bold focus:outline-none\" > Space Game </button>\n      </nav>\n\n      <Spacegame />\n\n      <Footer />\n\n    </>\n\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\nimport './css/Tailwind.css'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}